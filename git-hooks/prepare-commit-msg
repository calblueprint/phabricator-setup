#!/bin/bash

# A prepare-commit-message hook that makes it illegal to commit using the '-m'
# flag. Developers should commit normally or use '--amend' instead, in order
# to pick up the commit template. An exception is made for 'arc', which
# is the preferred workflow.
#
# For emergencies, you can override this hook prefixing your command with
# a `NOHOOK=1` environment variable, e.g.:
#
#     NOHOOK=1 git commit -m "yoloswag420"

# 'arc' will set this ARCANIST environment variable while it runs a command
#
# $NOHOOK allows skipping of all hooks including prepare-commit-msg, which
# does not support skipping via the --no-verify flag, unfortunately.
if [ -n "$ARCANIST" ] || [ -n "$NOHOOK" ]; then
    exit 0
fi

if [ "$2" = "message" ]; then
    RED=`tput setaf 1`
    BLUE=`tput setaf 4`
    PURP=`tput setaf 5`
    UL=`tput smul`
    RESET=`tput sgr0`

    echo -e "${RED}FATAL ERROR: Cannot commit with the ${PURP}-m${RED} flag."
    echo
    echo -e "${BLUE}If you're fixing an existing diff, use the ${PURP}--amend${BLUE} flag."
    echo -e "If you plan to amend and do not want to change your message,"
    echo -e "use ${PURP}--no-edit${BLUE} as well."
    echo -e "    > More info: ${UL}http://git.io/phab-at-bp#faq-3"
    echo -en ${RESET}
    unset RED BLUE PURP UL RESET

    # Check for updates
    DIR=$(dirname "${BASH_SOURCE[0]}")
    if [ -f "${DIR}/../bpphab-check-update" ]; then
        . ${DIR}/../bpphab-check-update
    fi
    unset DIR

    exit 1
fi
